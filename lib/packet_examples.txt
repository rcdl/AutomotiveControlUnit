## 
## Modelos de frames CAN 2.0 para testes e verificações do correto funcionamento de um controlador CAN.
## 
## Frames de testes criados por:
##		Luis Felipe Prado D'Andrada (lfpd@cin.ufpe.br)
## 		David Alain do Nascimento (dan@cin.ufpe.br)
## 
## Dica: site para crc = http://ghsi.de/CRC/index.php?Polynom=1100010110011001&Message=100 (pode não estar mais funcionando)
## 
## Os frames abaixo sequem o seguinte formato:
## 		Cabeçalho: (N) [em que N é o índice do frame criado para teste], campos com respectivos valores
## 		Frame representado em um stream de bits
## 		Frame representado em um stream de bits, mas com espeço entre os campos do frame para facilitar a leitura por humanos
##
## Para uma melhor visualização, é recomendado abrir este arquivo com Notepad++ com a opção "Quebrar linha automaticamente" desabilitada.
##

Frames CAN para teste - Os frames não estão com intermission. 

teste final (1) (4) (6) (9) (12) (19) (17) (14) (3)



OK
(1)ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 1011111111

OK																						
(2)ID_A - 0x0672 rtr=0 ide =0 dlc = 7	data = AAAAAAAAAAAAAA	CRC = 101100110011101 (ACK=ok)(até EOF) 
011001110010000011111001010101010101010101010101010101010101010101010101010101011001100111011011111111
0 11001110010 000 01111 100101010101010101010101010101010101010101010101010101010 101100110011101 1011111111

OK
(3)ID_A - 0x0672 rtr=0 ide =0 dlc = 6	data = AAAAAAAAAAAA	CRC = 000100100101110 (ACK=ok)(até EOF) 
011001110010000011101010101010101010101010101010101010101010101010100001001001011101011111111
0 11001110010 000 01110 101010101010101010101010101010101010101010101010 000100100101110 1011111111

OK
(4)ID_A - 0x0672 rtr=0 ide =0 dlc = 5	data = AAAAAAAAAA	CRC = 110011100100110 (ACK=ok)(até EOF) 
0110011100100000110110101010101010101010101010101010101010101100111001001101011111111
0 11001110010 000 01101 1010101010101010101010101010101010101010 110011100100110  1011111111

OK
(5)ID_A - 0x0672 rtr=0 ide =0 dlc = 4	data = AAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) 
01100111001000001100101010101010101010101010101010101110111010100101011111111
0 11001110010 000 01100 10101010101010101010101010101010  111011101010010 1011111111

OK
(6)ID_A - 0x0672 rtr=0 ide =0 dlc = 3	data = AAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) 
0110011100100000101110101010101010101010101001001011100000111011111111
0 11001110010 000 01011 101010101010101010101010 0100101110000011  1011111111 

OK
(7)ID_A - 0x0672 rtr=0 ide =0 dlc = 2	data = AAAA	CRC = 011011011110011 (ACK=ok)(até EOF) 
0110011100100000101010101010101010100110110111100111011111111
0 11001110010 000 01010 1010101010101010  011011011110011 1011111111

OK
(8)ID_A - 0x0672 rtr=0 ide =0 dlc = 1	data = AA	CRC = 110011100001010 (ACK=ok)(até EOF) 
01100111001000001001101010101100111000010101011111111
0 11001110010 000 01001 10101010  110011100001010 1011111111

OK
(9)ID_A - 0x0672 rtr=0 ide =0 dlc = 0	data = vazio	CRC = 011001011010101 (ACK=ok)(até EOF) 
011001110010000010000110010110101011011111111
0 11001110010 000 01000   011001011010101 1011111111

OK
(10)ID_A - 0x0672 rtr=1 ide =0 dlc = 0	data = vazio	CRC = 000000001010001 (ACK=ok)(até EOF) 
0110011100101000001010000011000100001011111111 
0 11001110010 100 00010  1000001100010000  1011111111

OK
(11)ID_A - 0x0672 rtr=1 ide =0 dlc = 1	data = vazio	CRC = 000000001010001 (ACK=ok)(até EOF) (mesmo com dlc =1 nao deve enviar dados)
011001110010100000110000100100010011011111111
0 11001110010 100 00011 000010010001001 101 1111111

OK 
(12)ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
0100010010011111000001000001111100100001000101010101010101010101010101010101010101010101010101010101010101011110111110101011011111111
0 10001001001 11 1100000100000111110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 1111011111010101 1011111111


(13)ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =1 dlc = 8	data = vazio CRC = 111101111110101 (ACK=ok)(até EOF)
010001001001111100000100000111110010100100001010011111001101011111111
0 10001001001 11 1100000100000111110010 100 1000  0101001111100110 1011111111

OK
(14)ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =1 dlc = 0	data = vazio CRC = 111101111110101 (ACK=ok)(até EOF)
0100010010011111000001000001111100101000001010111011111000011011111111
0 10001001001 11 1100000100000111110010 100 00010  1011101111100001 1011111111

(15)ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAA	CRC = 0001111100101110 (ACK=ok)(até EOF)
0100010010011111000001000001111100100000101110101010101010101010101000011111001011101011111111
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111

OK
(16)ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 0	data = AAAAAAAAAAAAAAAA	CRC = 010111000110100 (ACK=ok)(até EOF)
010001001001111100000100000111110010000010000101110001101001011111111
0 10001001001 11 1100000100000111110010 000 01000  010111000110100 1011111111

OK
(17)ACK Error
ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 0000100001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011100000011111111
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 11 00000011111111

OK
(18)Stuff Error 
ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
011001110010000100010101010101010101010101010101010101010101010101010101010101010100000000000011111111

(19)CRC Error
ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
01100111001000010001010101010101010101010101010101010101010101010101010101010101010000010000111000110100000011111111
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001110001 10 100000011111111
OK
(20)Overload apos um ACK Error (É possível?)
ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
011001110010000100010101010101010101010101010101010101010101010101010101010101010100000100001010001110000001111111100000011111111

OK
(21)ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111110110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 1011111111 11 0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 1011111111
																													^Interframe com 2 bits		

ok
(22)ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
011001110010000100010101010101010101010101010101010101010101010101010101010101010100000100001010001101111111110000000111111111110110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 1011111111 10 000000 11111111 111 0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001010001 101 1111111 
																													^ ^Overload frame
																													Interframe com 1 bits			
																													
OK																													
(23) (Bit stuff no inicio + nos dados e DLC >8 - OBS: Acabou sendo um bom caso de teste porque o CRC acaba com 4 bits 1's, assim dá pra testar se o crc delimiter vai sofrer destuff ou nao) 
ID_A = 11b srr=1 ide =1 ib_b = 0 rtr=0 dlc = 15 data = FFFFFFFFFFFFFFF
0000010000011111000001000001000001000001001111101111101111101111101111101111101111101111101111101111101111101111101111101110101100001011111011111111
0 0000100000111 110 000010000010000010000 0100 1111 10111110111110111110111110111110111110111110111110111110111110111110111110111 010110000101111 101 1111111																													)

ok
(24)idle grande +2x(Bit stuff no inicio + nos dados e DLC >8 - OBS: Acabou sendo um bom caso de teste porque o CRC acaba com 4 bits 1's, assim dá pra testar se o crc delimiter vai sofrer destuff ou nao) 
ID_A = 11b srr=1 ide =1 ib_b = 0 rtr=0 dlc = 15 data = FFFFFFFFFFFFFFF
11111111111111111111111111111111111111111111111111111111111111111111111111111100000100000111110000010000010000010000010011111011111011111011111011111011111011111011111011111011111011111011111011111011101011000010111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000010000011111000001000001000001000001001111101111101111101111101111101111101111101111101111101111101111101111101111101110101100001011111011111111
111111111111111111111111111111111111111111111111111111111111111111111111111111 0 0000100000111 110 000010000010000010000 0100 1111 10111110111110111110111110111110111110111110111110111110111110111110111110111 010110000101111 101 1111111 111111111111111111111111111111111111111111111111111111111111111111111111111111 0 0000100000111 110 000010000010000010000 0100 1111 10111110111110111110111110111110111110111110111110111110111110111110111110111 010110000101111 101 1111111																													)

(25) ID_A - 0x0449 srr = 0 ide =1 + Error Frame (com 12 no error flag)
0100010010010100000000000011111111 
0 10001001001 01 000000 000000 11111111 
             
ok
(26)Primeiro bit eof = 0 - ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
010001001001111100000100000111110010000010111010101010101010101010100001111100101110101000000011111111
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010 0001111100101110 101 0 000000 11111111	

(27)Ack delimiter = 0 - ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
01000100100111110000010000011111001000001011101010101010101010101010000111110010111010000000011111111	
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010 0001111100101110 100 000000 11111111		 

ok
(28)crc delimiter = 0 - ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
010001001001111100000100000111110010000010111010101010101010101010100001111100101110000000011111111	
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010 0001111100101110  0 000000 11111111		

(29) Frame + Overload + Frame + 1bit Intermission + Overload + Frame + Overload com recessivo na flag + Error com recessivo na flag + Error OK + Frame
- ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
0100010010011111000001000001111100100000101110101010101010101010101000011111001011101011111111000000111111111101000100100111110000010000011111001000001011101010101010101010101010000111110010111010111111111000000011111111110100010010011111000001000001111100100000101110101010101010101010101000011111001011101011111111000010000100000011111111110100010010011111000001000001111100100000101110101010101010101010101000011111001011101011111111
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111 000000 11111111 11 0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111 10 000000 11111111 11 0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111 00001 00001 000000 11111111 11 0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111
                                                                                                         ^Overload 1                                                                                                                 ^  ^Overload 2																													^	  ^		^ Error Flag OK		
																																																									| Intermission																													|	  | Error Flag com bit recessivo

ok
(30)idle grande +2x(Bit stuff no inicio + nos dados e DLC >8 - OBS: Acabou sendo um bom caso de teste porque o CRC acaba com 4 bits 1's, assim dá pra testar se o crc delimiter vai sofrer destuff ou nao) 
ID_A = 11b srr=1 ide =1 ib_b = 0 rtr=0 dlc = 15 data = FFFFFFFFFFFFFFF
111111111111111111111111111111111111111111111111111111111111111111111111111111000001000001111100000100000100000100000100111110111110111110111110111110111110111110111110111110111110111110111110111110111010110100011111010111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000010000011111000001000001000001000001001111101111101111101111101111101111101111101111101111101111101111101111101111101110101100001011111011111111
111111111111111111111111111111111111111111111111111111111111111111111111111111 0 0000100000111 110 000010000010000010000 0100 1111 10111110111110111110111110111110111110111110111110111110111110111110111110111 010110000101111 101 1111111 111111111111111111111111111111111111111111111111111111111111111111111111111111 0 0000100000111 110 000010000010000010000 0100 1111 10111110111110111110111110111110111110111110111110111110111110111110111110111 010110000101111 101 1111111																													)

																																																									| Overload Flag com bit recessivo	
(31) Frame + overload com delimiter com bit 0 + error com delimiter com bit 0 + error ok + frame
ID_A - 0x0449 srr = 1 ide =1 id_b =0x3007A (stuff)  rtr =0 dlc = 3	data = AAAAAAAAAAAAAAAA	CRC = 111101111110101 (ACK=ok)(até EOF)
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010 0001111100101110 1011111111 000000 111110 000000 111110 000000 11111111110100010010011111000001000001111100100000101110101010101010101010101000011111001011101011111111
0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010 0001111100101110 1011111111 000000 111110 000000 111110 000000 11111111 11 0 10001001001 11 1100000100000111110010 000 01011 101010101010101010101010  0001111100101110  1011111111 
																										 ^			   ^			 ^Error frame ok
																										 |			   | Error Flag + Delimiter com bit 0
																										 | Overload flag + delimiter com bit 0 
(32) CRC Error + Overload
ID_A - 0x0672 rtr=0 ide =0 dlc = 8	data = AAAAAAAAAAAAAAAA	CRC = 000000001010001 (ACK=ok)(até EOF) (bit stuffing apenas no crc)
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000011100011010000001111111100000011111111																										 
0 11001110010 000 1000 1010101010101010101010101010101010101010101010101010101010101010 0000100001110001 101 00000011111111 00000011111111
																										 
Frames compostos
(33)
(1)+(1)+(1)+(1)
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111111011001110010000100010101010101010101010101010101010101010101010101010101010101010100000100001010001101111111111101100111001000010001010101010101010101010101010101010101010101010101010101010101010000010000101000110111111111110110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111
0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111 111 0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111 111 0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111 111 0110011100100001000101010101010101010101010101010101010101010101010101010101010101000001000010100011011111111